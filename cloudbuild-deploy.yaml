steps:

  # Decrypt secrets and create .env
- name: '${_IMAGE_REPO}/docker-gcloud-make'
  entrypoint: bash
  args:
    - '-c'
    - |
      make env-decrypt env=${_ENV}
      cp env.${_ENV} .env

  # Install dependencies
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']

  # Add Cloudbuild network config for compose
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: bash
  args: [ "-c", 'printf "\nnetworks:\n   default:\n      external:\n        name: cloudbuild" >> docker-compose.yml' ]

  # Spin up MongoDB container for tests
- name: 'docker/compose:1.23.1'
  args: ['up', '-d', 'mongo']

  # Run tests
- name: 'gcr.io/cloud-builders/npm'
  args: ['test']
  env:
  - 'MONGO_URI=mongodb://root:root@mongo:27017/main-test?authSource=admin'

  # Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', '${_IMAGE_REPO}/$PROJECT_ID/api', '.' ]

  # Tag image with git tag
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'tag', '${_IMAGE_REPO}/$PROJECT_ID/api', '${_IMAGE_REPO}/$PROJECT_ID/api:$TAG_NAME']

  # Push image
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_IMAGE_REPO}/$PROJECT_ID/api' ]

  # Push image tag
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_IMAGE_REPO}/$PROJECT_ID/api:$TAG_NAME' ]

  # Create chart archive
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: bash
  args: [ '-c', 'tar -czvf chart.tgz -C infra/helm/api .' ]

  # Push chart to Helm repository
- name: 'gcr.io/rimusz-lab1/cloud-builders-helm'
  entrypoint: bash
  args: ['./scripts/push-helm-chart.sh']
  env:
    - 'REPO=gs://${_BUILDS_BUCKET}/charts/${_ENV}'
    - 'VERSION=${TAG_NAME}'

  # Upload encrypted secrets
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'env.*.enc', 'gs://${_BUILDS_BUCKET}/secrets/api/${TAG_NAME}/']

artifacts:
  objects:
    location: 'gs://${_BUILDS_BUCKET}'
    paths: ['secrets/api/${TAG_NAME}/env.${_ENV}.enc', 'charts/${_ENV}/api-${TAG_NAME}.tgz']

images:
  - ${_IMAGE_REPO}/$PROJECT_ID/api
  - ${_IMAGE_REPO}/$PROJECT_ID/api:$TAG_NAME
